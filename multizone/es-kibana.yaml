---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    component: kibana
spec:
  selector:
    component: kibana
  type: NodePort
  ports:
  - name: https
    port: 9192
    targetPort: https
    nodePort: 32101
  externalIPs:
  - 9.1.35.1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    component: kibana
spec:
  selector:
    matchLabels:
      app: kibana
  replicas: 1
  selector:
    matchLabels:
     component: kibana
  template:
    metadata:
      labels:
        app: kibana
        component: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana-oss:7.10.2
        env:
       # resources:
       #   limits:
       #     cpu: 7
       #   requests:
       #     cpu: 1
        ports:
        - containerPort: 5601
          name: https
        volumeMounts:
          - name: config
            mountPath: /usr/share/kibana/config
            readOnly: true
          - mountPath: /usr/share/kibana/certs
            name: kibana-certs
      volumes:
        - name: config
          configMap:
            name: kibana-config
        - name: kibana-certs
          persistentVolumeClaim:
            claimName: katana-certs-volume-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kibana-certs-volume
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  nfs:
    path: /mnt/k8sMount/kibana/
    server: 167.254.204.59
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: katana-certs-volume-claim
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
