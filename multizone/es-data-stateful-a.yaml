---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-data-a
  labels:
    component: elasticsearch
    role: data
spec:
  selector:
    matchLabels:
      app: es-data-a
  serviceName: elasticsearch-data
  replicas: 1
  #podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: es-data-a
        component: elasticsearch
        role: data
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - {key: role, operator: In, values: ["data"]}
              topologyKey: "kubernetes.io/hostname"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - {key: es-data, operator: In, values: ["true"]}
              - {key: zone, operator: In, values: ["a"]}
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      securityContext:
        fsGroup: 1000
      containers:
      - name: es-data-a
        securityContext:
          privileged: true
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2-amd64
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: node.attr.zone
          value: a
        - name: ES_JAVA_OPTS
          value: -Xms2048m -Xmx2048m
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_PATH_CONF
          value: "/usr/share/elasticsearch/config"
        - name: node.data
          value: "true"
        resources:
          requests:
            cpu: 1
          limits:
            cpu: 4
        ports:
        - containerPort: 9200
          name: http2
        - containerPort: 9300
          name: transport2
        livenessProbe:
          tcpSocket:
            port: transport2
          initialDelaySeconds: 85
          periodSeconds: 15
        #readinessProbe:
        #  httpGet:
        #    path: /_cluster/health
        #    port: http2
            #httpHeaders:
            #  - name: Authorization
            #    value: "Basic "
        #  initialDelaySeconds: 60
        #  timeoutSeconds: 10
        volumeMounts:
        - name: storage
          mountPath: /data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
        - name: config
          configMap:
            name: es-config
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: "local-path"
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 50Gi
